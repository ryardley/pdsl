(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{thJq:function(e,n,a){"use strict";a.r(n),a.d(n,"_frontmatter",(function(){return c})),a.d(n,"default",(function(){return l}));a("4cIV"),a("NZyX"),a("c0Gx"),a("QNbk"),a("+ytS"),a("WY76"),a("r0ML");var t=a("V0Ug"),r=a("sN0p");a("xH0s");function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(e[t]=a[t])}return e}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/new-in-version-5.md"}});var i={_frontmatter:c},s=r.a;function l(e){var n=e.components,a=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(t.b)(s,o({},i,a,{components:n,mdxType:"MDXLayout"}),Object(t.b)("h1",{id:"new-in-version-5"},"New in Version 5"),Object(t.b)("h3",{id:"exact-matching-on-objects-is-now-off-by-default"},"Exact matching on objects is now off by default"),Object(t.b)("p",null,"New in version 5.2+ objects no longer have exact matching turned on by default. If you wish to continue using exact matching you can use the ",Object(t.b)("a",o({parentName:"p"},{href:"#objects-with-exact-matching-syntax"}),"exact matching syntax"),":"),Object(t.b)("pre",null,Object(t.b)("code",o({parentName:"pre"},{className:"language-js"}),'p`{ name: "foo" }`({ name: "foo", age: 20 }); // true\n')),Object(t.b)("p",null,"Exact object matching mode can be turned on by using objects with pipes ",Object(t.b)("inlineCode",{parentName:"p"},"|"),":"),Object(t.b)("pre",null,Object(t.b)("code",o({parentName:"pre"},{className:"language-js"}),'p`{| name: "foo" |}`({ name: "foo", age: 20 }); // false\n')),Object(t.b)("p",null,"Once you turn exact matching on in an object tree you can only turn it off by using the rest operator:"),Object(t.b)("pre",null,Object(t.b)("code",o({parentName:"pre"},{className:"language-js"}),'p`{| \n  name: "foo",\n  exact: {\n    hello:"hello"\n  }\n  loose: {\n    hello: "hello",\n    ...\n  },\n|}`;\n')),Object(t.b)("h3",{id:"new-validation-syntax"},"New validation syntax"),Object(t.b)("p",null,"We now have a new validation syntax!"),Object(t.b)("pre",null,Object(t.b)("code",o({parentName:"pre"},{className:"language-js"}),'import { schema as p } from "pdsl";\n\nconst schema = p`{\n  name: \n    string       <- "Name must be a string" \n    & string[>7] <- "Name must be longer than 7 characters",\n  age: \n    (number & > 18) <- "Age must be numeric and over 18"\n}`;\n\nschema.validate({ name: "Rick" }).catch(err => {\n  console.log(err.message); // "Name must be longer than 7 characters"\n});\n')),Object(t.b)("h3",{id:"new-array-includes-syntax"},"New array includes syntax"),Object(t.b)("p",null,"Also new we have an ",Object(t.b)("a",o({parentName:"p"},{href:"#array-includes"}),"array includes")," function:"),Object(t.b)("pre",null,Object(t.b)("code",o({parentName:"pre"},{}),"[? <predicate> ]\n")),Object(t.b)("pre",null,Object(t.b)("code",o({parentName:"pre"},{className:"language-js"}),"p`[? >50 ]`([1, 2, 100, 12]); // true because 100 is greater than 50\n")),Object(t.b)("h3",{id:"formik-compatability"},"Formik compatability"),Object(t.b)("p",null,"We now have formik compatability!"),Object(t.b)("pre",null,Object(t.b)("code",o({parentName:"pre"},{className:"language-ts"}),'import {schema as p} from \'pdsl\';\n\nexport default () => (\n  <Formik\n    initialValues={{\n      email: "",\n      firstName: "",\n      lastName: ""\n    }}\n    validationSchema={p`{\n      email:\n        _         <- "Required"\n        & Email   <- "Invalid email address",\n      firstName:\n        _             <- "Required"\n        & string[>2]  <- "Must be longer than 2 characters"\n        & string[<20] <- "Nice try nobody has a first name that long",\n      lastName:\n        _             <- "Required"\n        & string[>2]  <- "Must be longer than 2 characters"\n        & string[<20] <- "Nice try nobody has a last name that long"\n    }`}\n    onSubmit={values => {\n      // submit values\n    }}\n    render={({ errors, touched }) => (\n      // render form\n    )}\n  />\n)\n')))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/new-in-version-5.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-new-in-version-5-md-99e4f22c368a8bb7f855.js.map