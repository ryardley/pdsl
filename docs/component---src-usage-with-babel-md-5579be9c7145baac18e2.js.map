{"version":3,"sources":["webpack:///../src/usage-with-babel.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qfAMO,IAAMA,EAAe,Q,yMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,2BADR,2BAGA,0CAAyB,mBAAGC,WAAW,KAAQ,CAC3C,KAAQ,8EADa,gBAAzB,KAGA,8CAA6B,mBAAGA,WAAW,KAAQ,CAC/C,KAAQ,qCACP,0BAAYA,WAAW,KAAvB,SAFL,8FAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,6CAIL,4GACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,oDAML,iBAAQ,CACN,GAAM,0BADR,0BAGA,8GACA,uCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iLASL,uCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,mT,uMAoBTJ,EAAWK,gBAAiB","file":"component---src-usage-with-babel-md-5579be9c7145baac18e2.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/rudiyardley/projects/pdsl/pdsl/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"precompiling-with-babel\"\n    }}>{`Precompiling with Babel`}</h1>\n    <p>{`PDSL comes with a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ryardley/pdsl/tree/monorepo/packages/babel-plugin-pdsl\"\n      }}>{`babel plugin`}</a>{`.`}</p>\n    <p>{`This plugin speeds up `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ryardley/pdsl\"\n      }}><inlineCode parentName=\"a\">{`pdsl`}</inlineCode></a>{` in babelified codebases by pre-compiling p-expressions to predicate function definitions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add --dev @pdsl/babel-plugin-pdsl\n`}</code></pre>\n    <p>{`You should ensure it is placed before any plugins that affect module import syntax.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  plugins: [\"@pdsl/babel-plugin-pdsl\"];\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"how-precompiling-works\"\n    }}>{`How precompiling works`}</h2>\n    <p>{`Conceptually this plugin parses p-expressions and replaces them with function chains:`}</p>\n    <p>{`Example Input:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import p from \"pdsl\";\n\nconst notNil = p\\`!(null|undefined)\\`;\nconst hasName = p\\`{name}\\`;\nconst isTrue = p\\`true\\`;\nconst hasNameWithFn = p\\`{name:\\${a => a.length > 10}}\\`;\n`}</code></pre>\n    <p>{`Example Output`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { val, not, or, obj, entry, pred } from \"pdsl/helpers\";\n\nconst notNil = val(not(or(val(null), val(undefined))));\nconst hasName = val(obj(\"name\"));\nconst isTrue = val(true);\nconst hasNameWithFn = val(\n  obj(\n    entry(\n      \"name\",\n      pred(a => a.length > 10)\n    )\n  )\n);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}