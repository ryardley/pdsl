{"version":3,"sources":["webpack:///../src/new-in-version-5.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,yMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,iBAAQ,CACN,GAAM,mDADR,mDAGA,qKAAoJ,mBAAGC,WAAW,KAAQ,CACtK,KAAQ,wCADwI,yBAApJ,KAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,4DAIL,gGAA+E,0BAAYA,WAAW,KAAvB,KAA/E,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+DAIL,+HACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,sHAaL,iBAAQ,CACN,GAAM,yBADR,yBAGA,6DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+XAgBL,iBAAQ,CACN,GAAM,6BADR,6BAGA,4CAA2B,mBAAGA,WAAW,KAAQ,CAC7C,KAAQ,oBADe,kBAA3B,cAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,uBAEL,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,2EAIL,iBAAQ,CACN,GAAM,wBADR,wBAGA,0DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,gzB,uMAqCTJ,EAAWK,gBAAiB","file":"component---src-new-in-version-5-md-99e4f22c368a8bb7f855.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/rudiyardley/projects/pdsl/pdsl/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"new-in-version-5\"\n    }}>{`New in Version 5`}</h1>\n    <h3 {...{\n      \"id\": \"exact-matching-on-objects-is-now-off-by-default\"\n    }}>{`Exact matching on objects is now off by default`}</h3>\n    <p>{`New in version 5.2+ objects no longer have exact matching turned on by default. If you wish to continue using exact matching you can use the `}<a parentName=\"p\" {...{\n        \"href\": \"#objects-with-exact-matching-syntax\"\n      }}>{`exact matching syntax`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`p\\`{ name: \"foo\" }\\`({ name: \"foo\", age: 20 }); // true\n`}</code></pre>\n    <p>{`Exact object matching mode can be turned on by using objects with pipes `}<inlineCode parentName=\"p\">{`|`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`p\\`{| name: \"foo\" |}\\`({ name: \"foo\", age: 20 }); // false\n`}</code></pre>\n    <p>{`Once you turn exact matching on in an object tree you can only turn it off by using the rest operator:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`p\\`{| \n  name: \"foo\",\n  exact: {\n    hello:\"hello\"\n  }\n  loose: {\n    hello: \"hello\",\n    ...\n  },\n|}\\`;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"new-validation-syntax\"\n    }}>{`New validation syntax`}</h3>\n    <p>{`We now have a new validation syntax!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { schema as p } from \"pdsl\";\n\nconst schema = p\\`{\n  name: \n    string       <- \"Name must be a string\" \n    & string[>7] <- \"Name must be longer than 7 characters\",\n  age: \n    (number & > 18) <- \"Age must be numeric and over 18\"\n}\\`;\n\nschema.validate({ name: \"Rick\" }).catch(err => {\n  console.log(err.message); // \"Name must be longer than 7 characters\"\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"new-array-includes-syntax\"\n    }}>{`New array includes syntax`}</h3>\n    <p>{`Also new we have an `}<a parentName=\"p\" {...{\n        \"href\": \"#array-includes\"\n      }}>{`array includes`}</a>{` function:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`[? <predicate> ]\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`p\\`[? >50 ]\\`([1, 2, 100, 12]); // true because 100 is greater than 50\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"formik-compatability\"\n    }}>{`Formik compatability`}</h3>\n    <p>{`We now have formik compatability!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import {schema as p} from 'pdsl';\n\nexport default () => (\n  <Formik\n    initialValues={{\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\"\n    }}\n    validationSchema={p\\`{\n      email:\n        _         <- \"Required\"\n        & Email   <- \"Invalid email address\",\n      firstName:\n        _             <- \"Required\"\n        & string[>2]  <- \"Must be longer than 2 characters\"\n        & string[<20] <- \"Nice try nobody has a first name that long\",\n      lastName:\n        _             <- \"Required\"\n        & string[>2]  <- \"Must be longer than 2 characters\"\n        & string[<20] <- \"Nice try nobody has a last name that long\"\n    }\\`}\n    onSubmit={values => {\n      // submit values\n    }}\n    render={({ errors, touched }) => (\n      // render form\n    )}\n  />\n)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}