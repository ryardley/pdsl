{"version":3,"sources":["webpack:///../src/composition.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,oMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAGA,8DACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,iqBAmBL,gHACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,wY,kMAmBTJ,EAAWK,gBAAiB","file":"component---src-composition-md-356037fcad73f87f4393.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/rudiyardley/projects/pdsl/pdsl/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"composition\"\n    }}>{`Composition`}</h1>\n    <p>{`You can compose p expressions easily.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const Nums = /[0-9]/;\nconst UpCase = /[A-Z]/;\nconst NotNumsAndUpCase = p\\`!\\${Nums} & !\\${UpCase}\\`;\nconst Extended = /[^a-zA-Z0-9]/;\n\nconst isValidUser = p\\`{\n  username: string[4..8] & \\${NotNumsAndUpCase},\n  password: string[>8] & \\${Extended},\n  age: > 17\n}\\`;\n\nisValidUser({ username: \"ryardley\", password: \"Hello1234!\", age: 21 }); //true\nisValidUser({ username: \"ryardley\", password: \"Hello1234!\", age: 17 }); //false\nisValidUser({ username: \"Ryardley\", password: \"Hello1234!\", age: 21 }); //false\nisValidUser({ username: \"12345\", password: \"Hello1234!\", age: 21 }); //false\nisValidUser({ username: \"ryardley\", password: \"12345678\", age: 21 }); //false\n`}</code></pre>\n    <p>{`The more complex things get, the more PDSL shines. See the above example in vanilla JS:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const isValidUser = input =>\n  input &&\n  input.username &&\n  typeof input.username === \"string\" &&\n  !input.username.match(/[^0-9]/) &&\n  !input.username.match(/[^A-Z]/) &&\n  input.username.length >= 4 &&\n  input.username.length <= 8 &&\n  typeof input.password === \"string\" &&\n  input.password.match(/[^a-zA-Z0-9]/) &&\n  input.password.length > 8 &&\n  input.age > 17;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}