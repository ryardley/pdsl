const _pdslHelpers = require("pdsl/helpers");

// TODO: The following should eventually be sourced and generated
//       from the main tests within the PDSL
const _pdslDefault = _pdslHelpers.createDefault();

const p = _pdslDefault;

const assert = require("assert");

assert.strictEqual(p(_h => _h.val(_h.not(_h.or(_h.val(null), _h.val(undefined)))))(1), true);
assert.strictEqual(p(_h => _h.val(_h.obj("name")))({
  name: "foo"
}), true);
assert.strictEqual(p(_h => _h.val(true))(true), true);
assert.strictEqual(p(_h => _h.val(_h.obj(_h.entry("name", _h.pred(a => a.length > 10)))))({
  name: "12345678901"
}), true);
assert.strictEqual(p(_h => _h.val(_h.extant))(1), true);
assert.strictEqual(p(_h => _h.val(_h.extant))(null), false);
assert.strictEqual(p(_h => _h.val(_h.and(_h.arrTypeMatch(_h.prim(Number)), _h.arrLen(5))))([1, 2, 3, 4, 5]), true);
assert.strictEqual(p(_h => _h.val(_h.arrIncl(2, 4)))([1, 2, 3, 4, 5]), true);
assert.strictEqual(p(_h => _h.val(_h.arrIncl(10)))([1, 2, 3, 4, 5]), false);
assert.strictEqual(p(_h => _h.val(_h.regx(_h.Email)))("email@example.com"), true);